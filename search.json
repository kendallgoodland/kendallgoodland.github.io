[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\nMy name is Kendall Goodland, and I am a graduate student at the University of Texas at Dallas pursuing a Master of Science in Social Data Analytics and Research. With a B.A. in Political Science and a passion for data-driven storytelling, I work to bridge the gap between complex datasets and meaningful public policy insights.\nMy policy interests span sustainability, social welfare, race relations, and cybersecurity. My research leverages data science to address pressing political, economic, and social challenges—from mapping disinformation networks to evaluating workforce development initiatives. I’ve worked on projects analyzing election trends using R’s Shiny package, modeling market volatility during presidential transitions, and applying natural language processing to identify patterns in health misinformation.\nProfessionally, I bring a strong foundation in operational logistics, public engagement, and strategic communication through roles at UT Dallas and The Storehouse Community Center. In these positions, I’ve developed inclusive programming, streamlined processes, and built communication strategies that effectively reach and resonate with diverse audiences.\nI am committed to transforming data into accessible, actionable, and equitable insights—empowering communities and organizations to make informed decisions in a data-rich world."
  },
  {
    "objectID": "blog/firstpost.html",
    "href": "blog/firstpost.html",
    "title": "Data Privacy in the Age of Social Media: An Analysis of Current Legislation",
    "section": "",
    "text": "When it comes to moving forward in the age of digital innovation, many consumers find themselves in an awkward position. Currently, the balance between data privacy and media usage does not exist at all. Media companies have access to all kinds of information about their users, and millions of these users are none the wiser. We are now faced with a crisis: we must allow for the law and public data literacy to catch up with this innovation. Many consumers worry about their own privacy online, and it is up to policymakers and innovators to work together and strike a balance."
  },
  {
    "objectID": "blog/firstpost.html#a-brief-history-of-digital-media-legislation",
    "href": "blog/firstpost.html#a-brief-history-of-digital-media-legislation",
    "title": "Data Privacy in the Age of Social Media: An Analysis of Current Legislation",
    "section": "A Brief History of Digital Media Legislation",
    "text": "A Brief History of Digital Media Legislation\nIt’s becoming apparent to many that our laws are not caught up with the abilities that private companies possess to store and distribute their data. However, policymakers can go neck-and-neck in this race. One of the most well-known active pieces of legislation involving online content is Section 230 of the Communications Decency Act delivered in 1996. This legislation"
  },
  {
    "objectID": "papers/VoterTurnoutRatesinUSPresRaces_App.html",
    "href": "papers/VoterTurnoutRatesinUSPresRaces_App.html",
    "title": "Presidential Election Voter Turnout by State",
    "section": "",
    "text": "from arcgis.gis import GIS\ngis = GIS(\"home\")\n\n\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom ipywidgets import interact, widgets\nfrom arcgis.gis import GIS\nfrom arcgis.features import FeatureLayer\n\n# Load the dataset\nfile_path = 'home/1976_2020_president.csv'\ndata = pd.read_csv(file_path)\n\n# Filter data for Democrat and Republican parties\nfiltered_data = data[data['party_simplified'].isin(['DEMOCRAT', 'REPUBLICAN'])]\n\n# Group and pivot data for visualization\ngrouped_data = filtered_data.groupby(['year', 'state', 'party_simplified'])['candidatevotes'].sum().reset_index()\npivot_data = grouped_data.pivot(index=['year', 'state'], columns='party_simplified', values='candidatevotes').reset_index()\npivot_data = pivot_data.fillna(0)  # Replace NaN with 0 for states with no votes for a party\n\n# Create a function to plot the bar graph\ndef plot_graph(state, years, graph_type):\n    selected_data = pivot_data[(pivot_data['state'] == state) & (pivot_data['year'].isin(years))]\n    \n    plt.figure(figsize=(12, 8))\n    \n    if graph_type == 'Bar Graph':\n        plt.bar(selected_data['year'] - 0.2, selected_data['DEMOCRAT'], width=0.4, label='Democrat', alpha=0.7, color='blue')\n        plt.bar(selected_data['year'] + 0.2, selected_data['REPUBLICAN'], width=0.4, label='Republican', alpha=0.7, color='red')\n    elif graph_type == 'Line Graph':\n        plt.plot(selected_data['year'], selected_data['DEMOCRAT'], marker='o', linestyle='-', label='Democrat', color='blue', alpha=0.7)\n        plt.plot(selected_data['year'], selected_data['REPUBLICAN'], marker='o', linestyle='-', label='Republican', color='red', alpha=0.7)\n\n    plt.title(f'Democrat vs Republican Turnout in {state}', fontsize=16)\n    plt.xlabel('Year', fontsize=12)\n    plt.ylabel('Votes', fontsize=12)\n    plt.xticks(years, rotation=45)\n    plt.legend()\n    plt.tight_layout()\n    plt.grid(alpha=0.3)\n    plt.show()\n\n# Define widgets for interactivity\nstate_widget = widgets.Dropdown(\n    options=pivot_data['state'].unique(),\n    description='State:',\n)\n\nyears_widget = widgets.SelectMultiple(\n    options=pivot_data['year'].unique(),\n    value=[1976, 1980],  # default values\n    description='Years:',\n)\n\ngraph_type_widget = widgets.RadioButtons(\n    options=['Bar Graph', 'Line Graph'],\n    description='Graph Type:',\n    value='Bar Graph',  # default value\n)\n\n# Use the interact function to create interactivity\ninteract(plot_graph, state=state_widget, years=years_widget, graph_type=graph_type_widget)\n\n\n\n\n&lt;function __main__.plot_graph(state, years, graph_type)&gt;\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom ipywidgets import interact, widgets\nfrom arcgis.gis import GIS\nfrom arcgis.features import FeatureLayer\n\n# Load dataset\nfile_path = 'home/1976_2020_president.csv'\ndata = pd.read_csv(file_path)\n\n# Filter data for Dem and Rep parties\nfiltered_data = data[data['party_simplified'].isin(['DEMOCRAT', 'REPUBLICAN'])]\n\n# Group & pivot data for visualization\ngrouped_data = filtered_data.groupby(['year', 'state', 'party_simplified'])['candidatevotes'].sum().reset_index()\npivot_data = grouped_data.pivot(index=['year', 'state'], columns='party_simplified', values='candidatevotes').reset_index()\npivot_data = pivot_data.fillna(0)  # Replace NaN with 0 for states with no votes for a party\n\n# Create a function for bar graph\ndef plot_graph(states, years, graph_type):\n    for state in states:\n        selected_data = pivot_data[(pivot_data['state'] == state) & (pivot_data['year'].isin(years))]\n        \n        plt.figure(figsize=(12, 8))\n        \n        if graph_type == 'Bar Graph':\n            plt.bar(selected_data['year'] - 0.2, selected_data['DEMOCRAT'], width=0.4, label='Democrat', alpha=0.7, color='blue')\n            plt.bar(selected_data['year'] + 0.2, selected_data['REPUBLICAN'], width=0.4, label='Republican', alpha=0.7, color='red')\n        elif graph_type == 'Line Graph':\n            plt.plot(selected_data['year'], selected_data['DEMOCRAT'], marker='o', linestyle='-', label='Democrat', color='blue', alpha=0.7)\n            plt.plot(selected_data['year'], selected_data['REPUBLICAN'], marker='o', linestyle='-', label='Republican', color='red', alpha=0.7)\n\n        plt.title(f'Democrat vs Republican Turnout in {state}', fontsize=16)\n        plt.xlabel('Year', fontsize=12)\n        plt.ylabel('Votes', fontsize=12)\n        plt.xticks(years, rotation=45)\n        plt.legend()\n        plt.tight_layout()\n        plt.grid(alpha=0.3)\n        plt.show()\n\n# Define widgets for interactivity\nstate_widget = widgets.SelectMultiple(\n    options=pivot_data['state'].unique(),\n    description='States:',\n    disabled=False\n)\n\nyears_widget = widgets.SelectMultiple(\n    options=pivot_data['year'].unique(),\n    value=[1976, 1980],  # default values\n    description='Years:',\n)\n\ngraph_type_widget = widgets.RadioButtons(\n    options=['Bar Graph', 'Line Graph'],\n    description='Graph Type:',\n    value='Bar Graph',  # default value\n)\n\n# Use the interact function to create interactivity\ninteract(plot_graph, states=state_widget, years=years_widget, graph_type=graph_type_widget)\n\n\n\n\n&lt;function __main__.plot_graph(states, years, graph_type)&gt;"
  },
  {
    "objectID": "papers/VoterTurnoutRatesinUSPresRaces_App.html#presidential-election-voter-turnout-by-state",
    "href": "papers/VoterTurnoutRatesinUSPresRaces_App.html#presidential-election-voter-turnout-by-state",
    "title": "Presidential Election Voter Turnout by State",
    "section": "",
    "text": "from arcgis.gis import GIS\ngis = GIS(\"home\")\n\n\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom ipywidgets import interact, widgets\nfrom arcgis.gis import GIS\nfrom arcgis.features import FeatureLayer\n\n# Load the dataset\nfile_path = 'home/1976_2020_president.csv'\ndata = pd.read_csv(file_path)\n\n# Filter data for Democrat and Republican parties\nfiltered_data = data[data['party_simplified'].isin(['DEMOCRAT', 'REPUBLICAN'])]\n\n# Group and pivot data for visualization\ngrouped_data = filtered_data.groupby(['year', 'state', 'party_simplified'])['candidatevotes'].sum().reset_index()\npivot_data = grouped_data.pivot(index=['year', 'state'], columns='party_simplified', values='candidatevotes').reset_index()\npivot_data = pivot_data.fillna(0)  # Replace NaN with 0 for states with no votes for a party\n\n# Create a function to plot the bar graph\ndef plot_graph(state, years, graph_type):\n    selected_data = pivot_data[(pivot_data['state'] == state) & (pivot_data['year'].isin(years))]\n    \n    plt.figure(figsize=(12, 8))\n    \n    if graph_type == 'Bar Graph':\n        plt.bar(selected_data['year'] - 0.2, selected_data['DEMOCRAT'], width=0.4, label='Democrat', alpha=0.7, color='blue')\n        plt.bar(selected_data['year'] + 0.2, selected_data['REPUBLICAN'], width=0.4, label='Republican', alpha=0.7, color='red')\n    elif graph_type == 'Line Graph':\n        plt.plot(selected_data['year'], selected_data['DEMOCRAT'], marker='o', linestyle='-', label='Democrat', color='blue', alpha=0.7)\n        plt.plot(selected_data['year'], selected_data['REPUBLICAN'], marker='o', linestyle='-', label='Republican', color='red', alpha=0.7)\n\n    plt.title(f'Democrat vs Republican Turnout in {state}', fontsize=16)\n    plt.xlabel('Year', fontsize=12)\n    plt.ylabel('Votes', fontsize=12)\n    plt.xticks(years, rotation=45)\n    plt.legend()\n    plt.tight_layout()\n    plt.grid(alpha=0.3)\n    plt.show()\n\n# Define widgets for interactivity\nstate_widget = widgets.Dropdown(\n    options=pivot_data['state'].unique(),\n    description='State:',\n)\n\nyears_widget = widgets.SelectMultiple(\n    options=pivot_data['year'].unique(),\n    value=[1976, 1980],  # default values\n    description='Years:',\n)\n\ngraph_type_widget = widgets.RadioButtons(\n    options=['Bar Graph', 'Line Graph'],\n    description='Graph Type:',\n    value='Bar Graph',  # default value\n)\n\n# Use the interact function to create interactivity\ninteract(plot_graph, state=state_widget, years=years_widget, graph_type=graph_type_widget)\n\n\n\n\n&lt;function __main__.plot_graph(state, years, graph_type)&gt;\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom ipywidgets import interact, widgets\nfrom arcgis.gis import GIS\nfrom arcgis.features import FeatureLayer\n\n# Load dataset\nfile_path = 'home/1976_2020_president.csv'\ndata = pd.read_csv(file_path)\n\n# Filter data for Dem and Rep parties\nfiltered_data = data[data['party_simplified'].isin(['DEMOCRAT', 'REPUBLICAN'])]\n\n# Group & pivot data for visualization\ngrouped_data = filtered_data.groupby(['year', 'state', 'party_simplified'])['candidatevotes'].sum().reset_index()\npivot_data = grouped_data.pivot(index=['year', 'state'], columns='party_simplified', values='candidatevotes').reset_index()\npivot_data = pivot_data.fillna(0)  # Replace NaN with 0 for states with no votes for a party\n\n# Create a function for bar graph\ndef plot_graph(states, years, graph_type):\n    for state in states:\n        selected_data = pivot_data[(pivot_data['state'] == state) & (pivot_data['year'].isin(years))]\n        \n        plt.figure(figsize=(12, 8))\n        \n        if graph_type == 'Bar Graph':\n            plt.bar(selected_data['year'] - 0.2, selected_data['DEMOCRAT'], width=0.4, label='Democrat', alpha=0.7, color='blue')\n            plt.bar(selected_data['year'] + 0.2, selected_data['REPUBLICAN'], width=0.4, label='Republican', alpha=0.7, color='red')\n        elif graph_type == 'Line Graph':\n            plt.plot(selected_data['year'], selected_data['DEMOCRAT'], marker='o', linestyle='-', label='Democrat', color='blue', alpha=0.7)\n            plt.plot(selected_data['year'], selected_data['REPUBLICAN'], marker='o', linestyle='-', label='Republican', color='red', alpha=0.7)\n\n        plt.title(f'Democrat vs Republican Turnout in {state}', fontsize=16)\n        plt.xlabel('Year', fontsize=12)\n        plt.ylabel('Votes', fontsize=12)\n        plt.xticks(years, rotation=45)\n        plt.legend()\n        plt.tight_layout()\n        plt.grid(alpha=0.3)\n        plt.show()\n\n# Define widgets for interactivity\nstate_widget = widgets.SelectMultiple(\n    options=pivot_data['state'].unique(),\n    description='States:',\n    disabled=False\n)\n\nyears_widget = widgets.SelectMultiple(\n    options=pivot_data['year'].unique(),\n    value=[1976, 1980],  # default values\n    description='Years:',\n)\n\ngraph_type_widget = widgets.RadioButtons(\n    options=['Bar Graph', 'Line Graph'],\n    description='Graph Type:',\n    value='Bar Graph',  # default value\n)\n\n# Use the interact function to create interactivity\ninteract(plot_graph, states=state_widget, years=years_widget, graph_type=graph_type_widget)\n\n\n\n\n&lt;function __main__.plot_graph(states, years, graph_type)&gt;"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kendall Goodland",
    "section": "",
    "text": "Social Data Analytics & Research Graduate Student"
  },
  {
    "objectID": "index.html#welcome-to-my-website",
    "href": "index.html#welcome-to-my-website",
    "title": "Kendall Goodland",
    "section": "",
    "text": "Social Data Analytics & Research Graduate Student"
  },
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "Blog",
    "section": "",
    "text": "Welcome! I write about politics, policy analysis, and global systems—data-driven takes with critical analysis.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Privacy in the Age of Social Media: An Analysis of Current Legislation\n\n\n\n\n\n\nPolitics\n\n\nPolicy\n\n\n\nWhen it comes to moving forward in the age of digital innovation, many consumers find themselves in an awkward position.\n\n\n\n\n\nAug 7, 2025\n\n\n\n\n\n\nNo matching items"
  }
]